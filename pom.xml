<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.howtographql.sampl</groupId>
	<artifactId>hackernews-graphql-java</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>hackernews-graphql-java</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.14.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<graphql-java.version>3.10.0</graphql-java.version>
		<graphql-java-tools.version>4.3.0</graphql-java-tools.version>
		<org.postgresql.driver.version>42.2.4</org.postgresql.driver.version>
		<hibernate.version>5.3.5.Final</hibernate.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-spring-boot-starter</artifactId>
			<version>${graphql-java.version}</version>
		</dependency>
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphiql-spring-boot-starter</artifactId>
			<version>${graphql-java.version}</version>
		</dependency>
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-tools</artifactId>
			<version>${graphql-java-tools.version}</version>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
			<version>${querydsl.version}</version>
		</dependency>

		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
			<version>${querydsl.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxjava -->
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<version>2.2.0</version>
		</dependency>

		<!-- Database/persists dependencies -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${org.postgresql.driver.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<addResources>true</addResources>
				</configuration>
			</plugin>

			<!-- Plugin allows to test in isolated DB and recreates DB and schema -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>

				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>${org.postgresql.driver.version}</version>
					</dependency>
				</dependencies>

				<!-- Perform DB and schema operations on behalf of root user -->
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<url>jdbc:postgresql://localhost:5432</url>
					<username>admin</username>
					<password>password</password>
				</configuration>

				<executions>

					<!-- Create role if not exists -->
					<execution>
						<id>install-create-role</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://localhost:5432/postgres</url>
							<autocommit>true</autocommit>
							<!-- PostgreSQL has no construction such as CREATE ROLE IF NOT EXISTS. Workaround -->
							<sqlCommand>
                                DO
                                $body$
                                BEGIN
                                   IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = 'ALPERE') THEN
                                      CREATE ROLE "ALPERE" LOGIN PASSWORD 'ALPERE' VALID UNTIL 'infinity';
                                   END IF;
                                END
                                $body$;
                            </sqlCommand>
							<!-- Workaround to execute DO pgSQL block -->
							<delimiter>/</delimiter>
							<delimiterType>row</delimiterType>
						</configuration>
					</execution>

					<!-- Create database -->
					<execution>
						<id>install-create-db</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://localhost:5432/postgres</url>
							<autocommit>true</autocommit>
							<sqlCommand>CREATE DATABASE "ALPERE"</sqlCommand>
							<onError>continue</onError>
						</configuration>
					</execution>

					<!-- Grant database a role -->
					<execution>
						<id>install-assign-role-to-db</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://localhost:5432/postgres</url>
							<autocommit>true</autocommit>
							<sqlCommand>ALTER DATABASE "ALPERE" OWNER TO "ALPERE"</sqlCommand>
						</configuration>
					</execution>

					<!-- Grant schema a role -->
					<execution>
						<id>install-assign-role-to-schema</id>
						<phase>install</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://localhost:5432/ALPERE</url>
							<autocommit>true</autocommit>
							<sqlCommand>ALTER SCHEMA public OWNER TO "ALPERE"</sqlCommand>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
